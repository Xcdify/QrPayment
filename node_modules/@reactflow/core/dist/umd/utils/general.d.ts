import type { Edge, Node } from '../types';
export declare const isNode: (element: Node<any, string | undefined> | Edge<any> | import("@reactflow/system").Connection) => element is Node<any, string | undefined>;
export declare const isEdge: (element: Node<any, string | undefined> | Edge<any> | import("@reactflow/system").Connection) => element is Edge<any>;
export declare const getOutgoers: (node: Node<any, string | undefined>, nodes: Node<any, string | undefined>[], edges: Edge<any>[]) => Node<any, string | undefined>[];
export declare const getIncomers: (node: Node<any, string | undefined>, nodes: Node<any, string | undefined>[], edges: Edge<any>[]) => Node<any, string | undefined>[];
export declare const addEdge: (edgeParams: Edge<any> | import("@reactflow/system").Connection, edges: Edge<any>[]) => Edge<any>[];
export declare const updateEdge: (oldEdge: Edge<any>, newConnection: import("@reactflow/system").Connection, edges: Edge<any>[], options?: import("@reactflow/utils").UpdateEdgeOptions | undefined) => Edge<any>[];
export declare const getConnectedEdges: (nodes: Node<any, string | undefined>[], edges: Edge<any>[]) => Edge<any>[];
//# sourceMappingURL=general.d.ts.map